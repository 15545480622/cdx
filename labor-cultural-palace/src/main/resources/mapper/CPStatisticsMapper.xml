<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inspur.vista.labor.cp.dao.CPStatisticsMapper">

    <!--当天24个小时每个小时的访问量-->
    <select id="selectCountHourDataByCpId" resultType="java.util.LinkedHashMap" parameterType="map">
SELECT
	a.HOUR hour,
	ifnull(b.count, 0) count
FROM
	(
		SELECT
			0 HOUR
		UNION ALL
			SELECT
				1 HOUR
		UNION ALL
			SELECT
				2 HOUR
		UNION ALL
            SELECT
                3 HOUR
		UNION ALL
			SELECT
				4 HOUR
		UNION ALL
            SELECT
                5 HOUR
		UNION ALL
            SELECT
                6 HOUR
		UNION ALL
            SELECT
                7 HOUR
		UNION ALL
			SELECT
				8 HOUR
		UNION ALL
			SELECT
				9 HOUR
		UNION ALL
			SELECT
				10 HOUR
		UNION ALL
			SELECT
				11 HOUR
		UNION ALL
			SELECT
				12 HOUR
		UNION ALL
			SELECT
				13 HOUR
		UNION ALL
			SELECT
				14 HOUR
		UNION ALL
			SELECT
				15 HOUR
		UNION ALL
			SELECT
				16 HOUR
		UNION ALL
			SELECT
				17 HOUR
		UNION ALL
			SELECT
				18 HOUR
		UNION ALL
			SELECT
				19 HOUR
		UNION ALL
			SELECT
				20 HOUR
		UNION ALL
			SELECT
				21 HOUR
		UNION ALL
			SELECT
				22 HOUR
		UNION ALL
			SELECT
				23 HOUR
    ) a
    LEFT JOIN (
        SELECT
            HOUR (collection_time) HOUR,
            count(1) count
        FROM
            cp_visitors_flowrate
        WHERE
          cp_id = #{cpId,jdbcType=BIGINT}
          and
         date_format(collection_time, '%Y-%m-%d') = CURRENT_DATE
        GROUP BY
            date_format(collection_time, '%Y%m%d-%H'),
            HOUR
    ) b ON a. HOUR = b. HOUR
    ORDER BY
        HOUR
    </select>

    <!--近7天每天的访问量-->
    <select id="selectCountWeekDataByCpId" resultType="java.util.LinkedHashMap" parameterType="map">
        select DAYOFWEEK(c.click_date) as week,count from (
			SELECT a.click_date,ifnull(b.count,0) as count
        	FROM (
            	SELECT date_sub(curdate(), interval 6 day) as click_date
            	union all
            	SELECT date_sub(curdate(), interval 5 day) as click_date
            	union all
            	SELECT date_sub(curdate(), interval 4 day) as click_date
            	union all
            	SELECT date_sub(curdate(), interval 3 day) as click_date
            	union all
            	SELECT date_sub(curdate(), interval 2 day) as click_date
            	union all
            	SELECT date_sub(curdate(), interval 1 day) as click_date
                union all
                SELECT curdate() as click_date

        	) a left join (
          		select date(collection_time) as date, count(*) as count
          		from cp_visitors_flowrate
          		where
          		cp_id = #{cpId,jdbcType=BIGINT}
          		group by date(collection_time)
        	) b on a.click_date = b.date  order by a.click_date asc
		) c
    </select>

    <!--近30天每天的访问量-->
    <select id="selectCountMonthDataByCpId" resultType="java.util.LinkedHashMap" parameterType="map">
		SELECT
			a.click_date as date,
			ifnull(b.count, 0) AS count
		FROM
			(
				SELECT
					date_sub(curdate(), INTERVAL 30 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 29 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 28 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 27 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 26 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 25 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 24 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 23 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 22 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 21 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 20 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 19 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 18 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 17 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 16 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 15 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 14 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 13 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 12 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 11 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 10 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 9 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 8 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 7 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 6 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 5 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 4 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 3 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 2 DAY) AS click_date
				UNION ALL
					SELECT
						date_sub(curdate(), INTERVAL 1 DAY) AS click_date
				UNION ALL
					SELECT
						curdate() AS click_date
			) a
				LEFT JOIN (
					SELECT
						date(collection_time) AS datetime,
						count(*) AS count
					FROM
						cp_visitors_flowrate
						where   cp_id = #{cpId,jdbcType=BIGINT}
					GROUP BY
						date(collection_time)
				) b ON a.click_date = b.datetime order by date asc;
    </select>

    <!--近一年每月的访问量-->
    <select id="selectCountYearDataByCpId" resultType="java.util.LinkedHashMap" parameterType="map">
		SELECT
			a.click_month as date,
			ifnull(b.count, 0) AS count
		FROM (
			  	SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 11 MONTH),'%Y-%m') AS click_month
				UNION ALL
			  	SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 10 MONTH),'%Y-%m') AS click_month
				UNION ALL
			  	SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 9 MONTH),'%Y-%m') AS click_month
				UNION ALL
			  	SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 8 MONTH),'%Y-%m') AS click_month
				UNION ALL
			  	SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 7 MONTH),'%Y-%m') AS click_month
				UNION ALL
			  	SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 6 MONTH),'%Y-%m') AS click_month
				UNION ALL
				SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 5 MONTH),'%Y-%m') AS click_month
				UNION ALL
				SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 4 MONTH),'%Y-%m') AS click_month
				UNION ALL
				SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 3 MONTH),'%Y-%m') AS click_month
				UNION ALL
				SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 2 MONTH),'%Y-%m') AS click_month
				UNION ALL
				SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 MONTH),'%Y-%m') AS click_month
				UNION ALL
				SELECT DATE_FORMAT(CURDATE(),'%Y-%m') AS click_month
				) a LEFT JOIN (
							SELECT
				   DATE_FORMAT(collection_time,'%Y-%m')  AS datetime,
								count(*) AS count
							FROM
								cp_visitors_flowrate
								where   cp_id = #{cpId,jdbcType=BIGINT}
							GROUP BY
						DATE_FORMAT(collection_time,'%Y-%m')
						) b ON a.click_month = b.datetime order by date asc;
    </select>
</mapper>